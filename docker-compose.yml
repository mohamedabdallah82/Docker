# docker-compose.yml
version: "3"
services:
  # application container
  node-app: 
    # container_name: express-node-app-container
    image: mohamedabdallah82/tresmerge-docker
    # ports:
    #   - "4000:4000"
    env_file:
      - ./.env
    # docker orchestration
    deploy:
      replicas: 4
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
    depends_on:
      - mongo
      - redis

  # mongo database container
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-db:/data/db           # Ananous volumedocker
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root


  # redis container
  redis:
    image: redis

  # nginx container
  nginx:
    image: nginx:stable-alpine
    ports:
     - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app

  ### postgres & mongo-express (commented and shifted with one tab) ###

    # # postgres container
    # postgres:
    #   image: postgres
    #   restart: always
    #   volumes:
    #     - postgres-db:/var/lib/postgresql/data
    #   environment:
    #     POSTGRES_USER: root
    #     POSTGRES_PASSWORD: root

    # # mongo express container
    # mongo-express:
    #   image: mongo-express
    #   restart: always
    #   ports:
    #     - 8081:8081
    #   environment:
    #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
    #     ME_CONFIG_MONGODB_ADMINPASSWORD: root
    #     ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    #     ME_CONFIG_BASICAUTH: "false"
    #   depends_on:
    #     - mongo
  


volumes:
  mongo-db:
  # postgres-db: